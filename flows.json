[
    {
        "id": "5997f62ed44f7303",
        "type": "tab",
        "label": "Home screen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d28ab40a18bec3b",
        "type": "tab",
        "label": "Lamp Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d9d2f214529d33da",
        "type": "tab",
        "label": "Historical",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1602850f8ee96d62",
        "type": "tab",
        "label": "Log in",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e572cadeac508138",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "042a34f2fe74b785",
        "type": "mqtt-broker",
        "name": "Broker Teste",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "iot/teste",
        "birthQos": "2",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "92c93a6ab1150941",
        "type": "sqlitedb",
        "db": "D:\\Documents\\node\\sqlite-tools-win-x64-3460100/lamp_schedule.db",
        "mode": "RWC"
    },
    {
        "id": "b02562d37cc13e0d",
        "type": "ui_tab",
        "name": "Lamp Control",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e59cab32981dad33",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d0ce65ddaf752a43",
        "type": "ui_group",
        "name": "Health System",
        "tab": "b02562d37cc13e0d",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false,
        "className": ""
    },
    {
        "id": "80ee528d1553a3c0",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "d0ce65ddaf752a43",
        "order": 1,
        "width": 17,
        "height": 1
    },
    {
        "id": "7a84557cbbf0cc02",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "d0ce65ddaf752a43",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "a9f7527ec10f1e31",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "d0ce65ddaf752a43",
        "order": 5,
        "width": 14,
        "height": 1
    },
    {
        "id": "e01eb8dd2f92184f",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "d0ce65ddaf752a43",
        "order": 6,
        "width": 17,
        "height": 1
    },
    {
        "id": "ec367a5b12a8bbaa",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "d0ce65ddaf752a43",
        "order": 12,
        "width": 17,
        "height": 1
    },
    {
        "id": "1ca872d52c8280c0",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "d97fe2dce7e66626",
        "type": "ui_tab",
        "name": "Historical Data",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2b4dbe26a6e761bf",
        "type": "ui_group",
        "name": "Historical ",
        "tab": "d97fe2dce7e66626",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a189ca57dad7ce7",
        "type": "ui_tab",
        "name": "log in",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7513268b5069b0b",
        "type": "ui_group",
        "name": "Log in",
        "tab": "4a189ca57dad7ce7",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d41725f52cd45dc",
        "type": "ui_tab",
        "name": "Register",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "339285a0c8df0979",
        "type": "ui_group",
        "name": "Register",
        "tab": "0d41725f52cd45dc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7b1f45b275c278f",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cfd2f7c6bb6b7df8",
        "type": "ui_group",
        "name": "Home",
        "tab": "b7b1f45b275c278f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3852e7d1c4d647c9",
        "type": "ui_tab",
        "name": "Air Control",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4d94314be070c8a8",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "3852e7d1c4d647c9",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "0639355c31f25ed4",
        "type": "ui_tab",
        "name": "Alarms",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "878442a4b7416d80",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "0639355c31f25ed4",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "953e098170eb7d80",
        "type": "ui_tab",
        "name": "Register Patient",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7fb095e26909aac0",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "953e098170eb7d80",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "2b60683926b07d34",
        "type": "ui_tab",
        "name": "Add Device",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fe8dc837cefb9493",
        "type": "ui_group",
        "name": "Add Device",
        "tab": "2b60683926b07d34",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cad5a26ebf0763f2",
        "type": "ui_tab",
        "name": "Entity",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8a85c8840ee75ccb",
        "type": "ui_group",
        "name": "Entity",
        "tab": "cad5a26ebf0763f2",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40e4e09321f45dca",
        "type": "ui_tab",
        "name": "Device",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e4cc8096b04ecbd3",
        "type": "ui_group",
        "name": "Device",
        "tab": "40e4e09321f45dca",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8d88c03ce56c4826",
        "type": "ui_tab",
        "name": "Add Entity",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5957570cb6c084d1",
        "type": "ui_group",
        "name": "Add Entity",
        "tab": "8d88c03ce56c4826",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "abcf94949513e12f",
        "type": "ui_spacer",
        "z": "e572cadeac508138",
        "name": "spacer",
        "group": "8a85c8840ee75ccb",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "770fa6ca3aaaa81d",
        "type": "ui_spacer",
        "z": "e572cadeac508138",
        "name": "spacer",
        "group": "8a85c8840ee75ccb",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "be858f575fa55f88",
        "type": "ui_spacer",
        "z": "e572cadeac508138",
        "name": "spacer",
        "group": "e4cc8096b04ecbd3",
        "order": 4,
        "width": 12,
        "height": 1
    },
    {
        "id": "8fe7e836f02ec440",
        "type": "ui_spacer",
        "z": "e572cadeac508138",
        "name": "spacer",
        "group": "e4cc8096b04ecbd3",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "9ca93b5ff4e09f25",
        "type": "ui_spacer",
        "z": "e572cadeac508138",
        "name": "spacer",
        "group": "e4cc8096b04ecbd3",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "65a033c6fb54a4cc",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "cad5a26ebf0763f2",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "250e71d18feeab5f",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "2b4dbe26a6e761bf",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "4a55ee41861e9940",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "2b4dbe26a6e761bf",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "142cc43881674dfc",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "2b4dbe26a6e761bf",
        "order": 7,
        "width": 8,
        "height": 1
    },
    {
        "id": "04fc4b16e8ea2b89",
        "type": "ui_spacer",
        "z": "d9d2f214529d33da",
        "name": "spacer",
        "group": "2b4dbe26a6e761bf",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "2085cd9f17528425",
        "type": "ui_button",
        "z": "5997f62ed44f7303",
        "name": "Lamp Control",
        "group": "cfd2f7c6bb6b7df8",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Lamp Control",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "lamp",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "d1d6bc02c47bc534"
            ]
        ]
    },
    {
        "id": "0e55652e7aa292ab",
        "type": "ui_button",
        "z": "5997f62ed44f7303",
        "name": "Historical",
        "group": "cfd2f7c6bb6b7df8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Historical",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 180,
        "wires": [
            [
                "393cedc3f3cf0b5e"
            ]
        ]
    },
    {
        "id": "f43b0361997965de",
        "type": "ui_button",
        "z": "5997f62ed44f7303",
        "name": "Air  Control",
        "group": "cfd2f7c6bb6b7df8",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Air Conditioning Control",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "fc0630f2221007c1"
            ]
        ]
    },
    {
        "id": "9afe2058b6f86ccb",
        "type": "ui_button",
        "z": "5997f62ed44f7303",
        "name": "Alarms",
        "group": "cfd2f7c6bb6b7df8",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Alarms",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 300,
        "wires": [
            [
                "8cef2f10398311bd"
            ]
        ]
    },
    {
        "id": "d1d6bc02c47bc534",
        "type": "change",
        "z": "5997f62ed44f7303",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Lamp Control\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "2c6a11c8550f0757"
            ]
        ]
    },
    {
        "id": "2c6a11c8550f0757",
        "type": "ui_ui_control",
        "z": "5997f62ed44f7303",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "393cedc3f3cf0b5e",
        "type": "change",
        "z": "5997f62ed44f7303",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Historical Data\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "fc71d4b426d6b5db"
            ]
        ]
    },
    {
        "id": "fc0630f2221007c1",
        "type": "change",
        "z": "5997f62ed44f7303",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Air Control\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "3043cb48c501d483"
            ]
        ]
    },
    {
        "id": "8cef2f10398311bd",
        "type": "change",
        "z": "5997f62ed44f7303",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Alarms\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 300,
        "wires": [
            [
                "6530216774f1ce58"
            ]
        ]
    },
    {
        "id": "fc71d4b426d6b5db",
        "type": "ui_ui_control",
        "z": "5997f62ed44f7303",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3043cb48c501d483",
        "type": "ui_ui_control",
        "z": "5997f62ed44f7303",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "6530216774f1ce58",
        "type": "ui_ui_control",
        "z": "5997f62ed44f7303",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "73a351f01fc3f758",
        "type": "ui_text",
        "z": "5997f62ed44f7303",
        "group": "4d94314be070c8a8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air control",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 100,
        "y": 360,
        "wires": []
    },
    {
        "id": "da32508344044b47",
        "type": "ui_text",
        "z": "5997f62ed44f7303",
        "group": "878442a4b7416d80",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Alarms",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 140,
        "y": 440,
        "wires": []
    },
    {
        "id": "944842fd646ecead",
        "type": "function",
        "z": "5997f62ed44f7303",
        "name": "function 26",
        "func": "msg.payload = {\n    \"tabs\": {\n        \"hide\": [\"Log in\"],  // Hide only the \"Log in\" tab\n        \"show\": [\"Lamp Control\", \"Home\", \"Historical Data\", \"Register\", \"Air Control\", \"Alarms\"]  // Unhide the other tabs\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "95ccc88ed7e675ed"
            ]
        ]
    },
    {
        "id": "95ccc88ed7e675ed",
        "type": "ui_ui_control",
        "z": "5997f62ed44f7303",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "44588b6b1d45b3b3",
        "type": "inject",
        "z": "5997f62ed44f7303",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "944842fd646ecead"
            ]
        ]
    },
    {
        "id": "fe357fd7a35d0ff3",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 580,
        "wires": []
    },
    {
        "id": "eb68d9e735036d6a",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "de8365a5d3e94122",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 240,
        "wires": []
    },
    {
        "id": "3bc84a5217ceac90",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 320,
        "wires": []
    },
    {
        "id": "f1dd8c9f78e66091",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 2",
        "func": "function convertMillisecondsToTime(millis) {\n    let date = new Date(millis);\n    let hours = date.getUTCHours().toString().padStart(2, '0');\n    let minutes = date.getUTCMinutes().toString().padStart(2, '0');\n    let seconds = date.getUTCSeconds().toString().padStart(2, '0');\n    return `${hours}:${minutes}:${seconds}`;\n}\n\nvar dict=flow.get(\"obj\")||{\"id_Lamp\":\"\",\n    \"id_user\":1, \n    \"time\" :\"00:00\",\n    \"weekdays\": [],   \n    \"action\": \"\"}\n\nmsg.payload = convertMillisecondsToTime(msg.payload);\n\ndict.time =msg.payload\nflow.set(\"obj\", dict)\nmsg.payload= dict\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "eb68d9e735036d6a"
            ]
        ]
    },
    {
        "id": "13e8ef15c626ac8f",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 4",
        "func": "\nvar dict=flow.get(\"obj\")||{\"id_Lamp\":\"\",\n    \"id_user\":1, \n    \"time\" :\"00:00\",\n    \"weekdays\": [],   \n    \"action\": \"\"}\n\ndict.weekdays =msg.payload\nflow.set(\"obj\", dict)\nmsg.payload = dict\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "de8365a5d3e94122"
            ]
        ]
    },
    {
        "id": "3cdc9bb4caca8aca",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 5",
        "func": "\nvar dict=flow.get(\"obj\")||{\"id_Lamp\":\"\",\n    \"id_user\":1, \n    \"time\" :\"00:00\",\n    \"weekdays\": [],   \n    \"action\": \"\"}\n\n//dict.state =dict.state.toLowerCase()\ndict.action =msg.payload\nflow.set(\"obj\", dict)\nmsg.payload= dict\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 320,
        "wires": [
            [
                "3bc84a5217ceac90"
            ]
        ]
    },
    {
        "id": "f238a067a40dcad2",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "61269081c57d643f",
        "type": "http request",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/test",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 410,
        "y": 440,
        "wires": [
            [
                "099645a762f32b46",
                "d13c3fadc73ae48b"
            ]
        ]
    },
    {
        "id": "1f2c9ce26d6f2864",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 380,
        "wires": []
    },
    {
        "id": "1bd6448aa2652cb5",
        "type": "ui_table",
        "z": "1d28ab40a18bec3b",
        "group": "d0ce65ddaf752a43",
        "name": "",
        "order": 11,
        "width": 17,
        "height": 4,
        "columns": [
            {
                "field": "id",
                "title": "Id",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "id_Lamp",
                "title": "id_Lamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "weekdays",
                "title": "weekdays",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "action",
                "title": "Action",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 490,
        "y": 640,
        "wires": [
            [
                "fe357fd7a35d0ff3",
                "3d812743de72a8e1",
                "caedf4cd960bdca4"
            ]
        ]
    },
    {
        "id": "3623b3e5402c5b22",
        "type": "ui_text_input",
        "z": "1d28ab40a18bec3b",
        "name": "Select Time",
        "label": "Select TIme",
        "tooltip": "",
        "group": "d0ce65ddaf752a43",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "time",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "f1dd8c9f78e66091"
            ]
        ]
    },
    {
        "id": "9edb75148cdca716",
        "type": "ui_dropdown",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "label": "Select Weekdays",
        "tooltip": "",
        "place": "Select Weekdays",
        "group": "d0ce65ddaf752a43",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "Sunday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Monday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Tuesday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Wednesday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Thursday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Friday",
                "type": "str"
            },
            {
                "label": "",
                "value": "Saturday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "13e8ef15c626ac8f"
            ]
        ]
    },
    {
        "id": "1f40804e41e2ea59",
        "type": "ui_dropdown",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "label": "Action",
        "tooltip": "",
        "place": "State",
        "group": "d0ce65ddaf752a43",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": " Turn On",
                "value": true,
                "type": "bool"
            },
            {
                "label": "Turn Off",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "3cdc9bb4caca8aca"
            ]
        ]
    },
    {
        "id": "099645a762f32b46",
        "type": "ui_toast",
        "z": "1d28ab40a18bec3b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "msg.payload",
        "name": "",
        "x": 690,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea2a9f57cac8678",
        "type": "json",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 230,
        "y": 440,
        "wires": [
            [
                "61269081c57d643f",
                "1f2c9ce26d6f2864"
            ]
        ]
    },
    {
        "id": "94f6d08eccf9c862",
        "type": "ui_button",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "group": "d0ce65ddaf752a43",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Add Row",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-plus-squared",
        "payload": "obj",
        "payloadType": "flow",
        "topic": "payload",
        "topicType": "msg",
        "x": 80,
        "y": 440,
        "wires": [
            [
                "2ea2a9f57cac8678"
            ]
        ]
    },
    {
        "id": "1117876611a416aa",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 700,
        "wires": []
    },
    {
        "id": "d13c3fadc73ae48b",
        "type": "http request",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/test",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 280,
        "y": 600,
        "wires": [
            [
                "1117876611a416aa",
                "1bd6448aa2652cb5"
            ]
        ]
    },
    {
        "id": "bc5cc9a462bceb38",
        "type": "ui_button",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "group": "d0ce65ddaf752a43",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "line_selected",
        "payloadType": "flow",
        "topic": "payload",
        "topicType": "msg",
        "x": 50,
        "y": 1080,
        "wires": [
            [
                "0b793fae5e1cd024"
            ]
        ]
    },
    {
        "id": "eef526c152ee6c2d",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 820,
        "wires": []
    },
    {
        "id": "6740333f14b47192",
        "type": "ui_button",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "group": "d0ce65ddaf752a43",
        "order": 15,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "update",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 600,
        "wires": [
            [
                "d13c3fadc73ae48b"
            ]
        ]
    },
    {
        "id": "c2eb5adbe54cccf9",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 10",
        "func": "// Modify the state of each item in the payload\nmsg.payload = msg.payload.map(item => {\n    // Check if the state is \"0\" or \"1\" and change it accordingly\n    item.state = item.state === \"0\" ? \"Turn off\" : \"Turn on\";\n    return item;\n});\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ec8a42057c0d79fc",
        "type": "http request",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "method": "DELETE",
        "ret": "obj",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": true,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "94f24be1463e8361",
                "b301f3ccf22df2b1"
            ]
        ]
    },
    {
        "id": "94f24be1463e8361",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3d812743de72a8e1",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 12",
        "func": "// Store msg.payload into flow variable 'line_selected'\nflow.set('line_selected', msg.payload);\n\n// Return msg for further processing if needed\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a4e0e680e12ddcfe",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 13",
        "func": "msg.url = `http://localhost:8080/test/?id=${msg.payload.id}`; // Dynamically set the URL\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1180,
        "wires": [
            [
                "ec8a42057c0d79fc"
            ]
        ]
    },
    {
        "id": "8cddeb79b348c0a5",
        "type": "ui_template",
        "z": "1d28ab40a18bec3b",
        "group": "d0ce65ddaf752a43",
        "name": "",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if (msg && msg.payload) {\n            var selectedRowId = msg.payload.id;\n\n            // Clear previously highlighted rows\n            var tableRows = document.querySelectorAll(\".tabulator-row\");\n            tableRows.forEach(row => {\n                row.style.backgroundColor = \"\";\n            });\n\n            // Highlight the selected row based on ID\n            var selectedRow = Array.from(tableRows).find(row => {\n                return row.querySelector(\".tabulator-cell[tabulator-field='id']\").innerText.trim() === String(selectedRowId);\n            });\n\n            if (selectedRow) {\n                selectedRow.style.backgroundColor = \"#98fb98\";\n            }\n        }\n    });\n})(scope);\n</script>\n\n<style>\n/* Optional: Add any custom styling for the table */\n.tabulator-row {\n    transition: background-color 0.3s ease;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 700,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "caedf4cd960bdca4",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 14",
        "func": "// Store the selected row ID in a flow variable\nflow.set('selectedRowId', msg.payload.id);\n\n// Pass the message along\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 740,
        "wires": [
            [
                "eef526c152ee6c2d",
                "8cddeb79b348c0a5"
            ]
        ]
    },
    {
        "id": "0b793fae5e1cd024",
        "type": "ui_toast",
        "z": "1d28ab40a18bec3b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes, Delete it",
        "cancel": "Cancel",
        "raw": false,
        "className": "msg.payload",
        "topic": "Do you want to delete it?",
        "name": "",
        "x": 190,
        "y": 1080,
        "wires": [
            [
                "57c08801ee46964d",
                "adb422fb3073973f"
            ]
        ]
    },
    {
        "id": "57c08801ee46964d",
        "type": "debug",
        "z": "1d28ab40a18bec3b",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 1260,
        "wires": []
    },
    {
        "id": "adb422fb3073973f",
        "type": "switch",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes, Delete it",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 1080,
        "wires": [
            [
                "a083d5fb7438a4a3"
            ]
        ]
    },
    {
        "id": "a083d5fb7438a4a3",
        "type": "change",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "line_selected",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "a4e0e680e12ddcfe"
            ]
        ]
    },
    {
        "id": "8684a73caa8176d0",
        "type": "link in",
        "z": "1d28ab40a18bec3b",
        "name": "link in 3",
        "links": [
            "b301f3ccf22df2b1",
            "94ebb1c164d6244d"
        ],
        "x": 115,
        "y": 720,
        "wires": [
            [
                "d13c3fadc73ae48b"
            ]
        ]
    },
    {
        "id": "b301f3ccf22df2b1",
        "type": "link out",
        "z": "1d28ab40a18bec3b",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "8684a73caa8176d0"
        ],
        "x": 755,
        "y": 920,
        "wires": []
    },
    {
        "id": "ea277da4c10e9a2a",
        "type": "ui_button",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "group": "d0ce65ddaf752a43",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Update Lamps",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "update",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "71c002c29a4860ea"
            ]
        ]
    },
    {
        "id": "71c002c29a4860ea",
        "type": "http request",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/test/lamps",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 280,
        "y": 60,
        "wires": [
            [
                "d054d737c4168ce1"
            ]
        ]
    },
    {
        "id": "3e1e8eaa7a6da023",
        "type": "ui_dropdown",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "d0ce65ddaf752a43",
        "order": 2,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "8cef0f35ea90d7b7"
            ]
        ]
    },
    {
        "id": "d054d737c4168ce1",
        "type": "change",
        "z": "1d28ab40a18bec3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 60,
        "wires": [
            [
                "3e1e8eaa7a6da023"
            ]
        ]
    },
    {
        "id": "8cef0f35ea90d7b7",
        "type": "function",
        "z": "1d28ab40a18bec3b",
        "name": "function 15",
        "func": "var dict=flow.get(\"obj\")||{\"id_Lamp\":\"\", \n    \"time\" :\"00:00\",\n    \"weekdays\": [],   \n    \"action\": \"\"}\n\ndict.id_Lamp =msg.payload\nflow.set(\"obj\", dict)\nmsg.payload = dict\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 60,
        "wires": [
            [
                "f238a067a40dcad2"
            ]
        ]
    },
    {
        "id": "a52e2a51d4e4ef60",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 16",
        "func": "// Get the selected start date and sensor type from the incoming message\nvar startDate = flow.get('start_date');   // Start date from the date picker\nvar endDate = flow.get('end_date');  // Get end date from flow context\nvar sensorType = flow.get('sensor_type');  // Get selected sensor type from flow context\n/*\n// Store the start date in flow context if it's the first message\nif (msg.topic === 'start_date') {\n    flow.set('start_date', startDate);\n}\n\n// Check if all values are available\nif (startDate && endDate && sensorType) {\n    var url = `http://localhost:8080/historical/${sensorType}?start_date=${flow.get('start_date')}&end_date=${endDate}`;\n    msg.url = url;  // Set the constructed URL in the msg object\n    return msg;  // Return the message to the next node\n} else {\n    return null;  // If any value is missing, do nothing\n}*/\n\nvar deviceSelected = flow.get('deviceSelected');\n\nmsg.url = `http://localhost:8081/thingspeak?device_id=${deviceSelected}`;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 800,
        "wires": [
            [
                "2e17a468fe637fea"
            ]
        ]
    },
    {
        "id": "137cec9c2d435d20",
        "type": "ui_button",
        "z": "d9d2f214529d33da",
        "name": "",
        "group": "2b4dbe26a6e761bf",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 80,
        "y": 980,
        "wires": [
            [
                "d55fac367b3e943c"
            ]
        ]
    },
    {
        "id": "2e17a468fe637fea",
        "type": "http request",
        "z": "d9d2f214529d33da",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 340,
        "y": 800,
        "wires": [
            [
                "228b2bc55f5da57f",
                "b64e4f589d33e6f7"
            ]
        ]
    },
    {
        "id": "e02036dcc84a3986",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 17",
        "func": "if (!Array.isArray(msg.payload)) {\n    node.warn(\"Bad data inject: msg.payload is not an array.\");\n    return null;\n}\n\n// Convert data to the expected format\nmsg.payload = [{\n    series: [\"Sensor Data\"],\n    data: [\n        msg.payload.map(point => ({\n            x: new Date(point.created_at).getTime(), // Convert to Unix timestamp (ms)\n            y: parseFloat(point.value) // Ensure `y` is a float\n        }))\n    ],\n    labels: [] // No labels needed\n}];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 980,
        "wires": [
            [
                "db7c758dbd0edad9"
            ]
        ]
    },
    {
        "id": "db7c758dbd0edad9",
        "type": "ui_chart",
        "z": "d9d2f214529d33da",
        "name": "teste",
        "group": "2b4dbe26a6e761bf",
        "order": 13,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#0f5180",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb27263a45d6d19",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 880,
        "wires": []
    },
    {
        "id": "acc66dd1ea52f5e2",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 800,
        "wires": []
    },
    {
        "id": "eac28a2d1bae6159",
        "type": "ui_text_input",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "Digit a Number of passport",
        "tooltip": "",
        "group": "2b4dbe26a6e761bf",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "c46120c0d8f387aa"
            ]
        ]
    },
    {
        "id": "6b777098c10ff124",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 32",
        "func": "var passport = flow.get('passportNumber');  // Get selected sensor type from flow context\n\nvar url = `http://0.0.0.0:8080/patient?passport_code=${passport}`;\nmsg.url = url;  // Set the constructed URL in the msg object\n\nreturn msg;  // Return the message to the next node",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 500,
        "wires": [
            [
                "18780e04311ffe91"
            ]
        ]
    },
    {
        "id": "bafaf4e35d8853ae",
        "type": "ui_button",
        "z": "d9d2f214529d33da",
        "name": "",
        "group": "2b4dbe26a6e761bf",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Search",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 60,
        "y": 500,
        "wires": [
            [
                "6b777098c10ff124"
            ]
        ]
    },
    {
        "id": "18780e04311ffe91",
        "type": "http request",
        "z": "d9d2f214529d33da",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 500,
        "wires": [
            [
                "be051d7dfecaca50",
                "4723f083d3548e0d"
            ]
        ]
    },
    {
        "id": "c46120c0d8f387aa",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "passportNumber",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "be051d7dfecaca50",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 33",
        "func": "var patient = msg.payload?.[0]?.patient_id;  // extract patient_id\n\nflow.set(\"patientInformation\", msg.payload?.[0]);\n\nif (patient !== undefined) {\n    flow.set(\"patient_id\", patient);  // Store in flow variable\n    msg.url = `http://0.0.0.0:8080/device?patient_id=${patient}`;\n    msg.patient_id = patient;  // Add patient_id to msg for immediate use\n} else {\n    node.warn(\"patient_id not found in payload\");\n    msg.url = null;\n    msg.patient_id = null;  // Ensure msg.patient_id is always set\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 500,
        "wires": [
            [
                "b066c8b588ae57d3"
            ]
        ]
    },
    {
        "id": "a19adb663ff7fb2a",
        "type": "http request",
        "z": "d9d2f214529d33da",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 940,
        "y": 440,
        "wires": [
            [
                "22a8b238bad1454e",
                "48ee571e0bceb64c"
            ]
        ]
    },
    {
        "id": "48ee571e0bceb64c",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 340,
        "wires": []
    },
    {
        "id": "372f2b94d716404b",
        "type": "ui_dropdown",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b4dbe26a6e761bf",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 1360,
        "y": 440,
        "wires": [
            [
                "084e12f3338ae765",
                "c624f8f3c94eceba",
                "4f91abf893b7d8e2"
            ]
        ]
    },
    {
        "id": "22a8b238bad1454e",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 35",
        "func": "// Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    return null; // Stop if data is not in expected format\n}\n\n// Format data dropdown\nmsg.options = msg.payload.map(item => ({\n    [item.device_name]: item.device_id  \n}));\n\n\n\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 440,
        "wires": [
            [
                "372f2b94d716404b"
            ]
        ]
    },
    {
        "id": "084e12f3338ae765",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 440,
        "wires": []
    },
    {
        "id": "a358afa91172fcd7",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 560,
        "wires": [
            [
                "7a4b4325cea85d1e"
            ]
        ]
    },
    {
        "id": "7a4b4325cea85d1e",
        "type": "ui_toast",
        "z": "d9d2f214529d33da",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Passport not found",
        "name": "",
        "x": 1190,
        "y": 560,
        "wires": []
    },
    {
        "id": "b066c8b588ae57d3",
        "type": "switch",
        "z": "d9d2f214529d33da",
        "name": "",
        "property": "url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 500,
        "wires": [
            [
                "a19adb663ff7fb2a"
            ],
            [
                "a358afa91172fcd7"
            ]
        ]
    },
    {
        "id": "c624f8f3c94eceba",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "deviceSelected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "228b2bc55f5da57f",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 36",
        "func": "// Ensure the payload structure is correct\nif (!Array.isArray(msg.payload) || msg.payload.length === 0 || !msg.payload[0].Sensors) {\n    return null; // Stop if data is not in expected format\n}\n\n// Extract sensors from the first device (assuming only one device in payload)\nlet sensors = msg.payload[0].Sensors;\n\n// Format data correctly for the dropdown\nmsg.options = sensors.map((sensor, index) => ({\n    [sensor.Name]: index // Using index as value, can change if needed\n}));\n\n\n\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 800,
        "wires": [
            [
                "6340e7658674e23d",
                "35d8a64e13d92ea3"
            ]
        ]
    },
    {
        "id": "6340e7658674e23d",
        "type": "ui_dropdown",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "2b4dbe26a6e761bf",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 760,
        "y": 800,
        "wires": [
            [
                "acc66dd1ea52f5e2",
                "77cfedda02471cb4"
            ]
        ]
    },
    {
        "id": "ae95b4ca0e933e8f",
        "type": "link in",
        "z": "d9d2f214529d33da",
        "name": "link in Device",
        "links": [
            "4f91abf893b7d8e2"
        ],
        "x": 35,
        "y": 800,
        "wires": [
            [
                "a52e2a51d4e4ef60"
            ]
        ]
    },
    {
        "id": "4f91abf893b7d8e2",
        "type": "link out",
        "z": "d9d2f214529d33da",
        "name": "link out Device",
        "mode": "link",
        "links": [
            "ae95b4ca0e933e8f"
        ],
        "x": 1505,
        "y": 360,
        "wires": []
    },
    {
        "id": "b64e4f589d33e6f7",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 68",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 600,
        "wires": []
    },
    {
        "id": "1fda2d9b42ade85c",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "35d8a64e13d92ea3",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 37",
        "func": "\n// Extract sensors array\nlet sensors = msg.payload[0].Sensors;\n\n// Store it in a flow variable\nflow.set(\"sensors\", sensors);\n\n// Pass the message forward (optional)\nmsg.payload = sensors;\nreturn msg;\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 660,
        "wires": [
            [
                "1fda2d9b42ade85c"
            ]
        ]
    },
    {
        "id": "77cfedda02471cb4",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "indexSensor",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "d55fac367b3e943c",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 39",
        "func": "// Ensure flow.sensors and flow.indexSensor are correctly set\nlet sensors = flow.get('sensors');\nlet indexSensor = flow.get('indexSensor');\n\nif (Array.isArray(sensors) && sensors.length > 0 && indexSensor !== undefined && indexSensor >= 0 && indexSensor < sensors.length) {\n    let selectedSensor = sensors[indexSensor];\n    \n    // Ensure selectedSensor contains values\n    if (selectedSensor && selectedSensor.Values && Array.isArray(selectedSensor.Values)) {\n        msg.payload = selectedSensor.Values;  // This contains the values of the selected sensor\n    } else {\n        node.warn(\"Selected sensor has no values or invalid format.\");\n        msg.payload = [];\n    }\n} else {\n    node.warn(\"Invalid sensor index or sensors array.\");\n    msg.payload = [];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 980,
        "wires": [
            [
                "e02036dcc84a3986",
                "1fb27263a45d6d19",
                "5206705f8a320b3e"
            ]
        ]
    },
    {
        "id": "5206705f8a320b3e",
        "type": "ui_table",
        "z": "d9d2f214529d33da",
        "group": "2b4dbe26a6e761bf",
        "name": "",
        "order": 14,
        "width": 12,
        "height": 4,
        "columns": [
            {
                "field": "created_at",
                "title": "created_at",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 450,
        "y": 1080,
        "wires": []
    },
    {
        "id": "99f466d74f97d57c",
        "type": "ui_text",
        "z": "d9d2f214529d33da",
        "group": "2b4dbe26a6e761bf",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Patient: ",
        "format": "{{msg.payload.name}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "11",
        "color": "#000000",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "4723f083d3548e0d",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 40",
        "func": "var patient = msg.payload?.[0]?.patient_id;  // extract patient_id\n\n;\nmsg.payload =msg.payload?.[0]//?.name\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "99f466d74f97d57c",
                "9ec479d5bf4cdde8",
                "d6ed9d453a70b0d7"
            ]
        ]
    },
    {
        "id": "9ec479d5bf4cdde8",
        "type": "ui_text",
        "z": "d9d2f214529d33da",
        "group": "2b4dbe26a6e761bf",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Address: ",
        "format": "{{msg.payload.address}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "11",
        "color": "#000000",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "d6ed9d453a70b0d7",
        "type": "ui_text",
        "z": "d9d2f214529d33da",
        "group": "2b4dbe26a6e761bf",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Emergency Contact: ",
        "format": "{{msg.payload.emergency_contact}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "11",
        "color": "#000000",
        "x": 700,
        "y": 420,
        "wires": []
    },
    {
        "id": "afc0575449c19b1d",
        "type": "ui_date_picker",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "Start date",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "2711e96a3c37a659"
            ]
        ]
    },
    {
        "id": "4fe27d3678b9fbe2",
        "type": "ui_date_picker",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "End date",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "c540d4a7ab1bac42"
            ]
        ]
    },
    {
        "id": "7887b836f30b62cc",
        "type": "ui_dropdown",
        "z": "d9d2f214529d33da",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "Temperature",
                "type": "str"
            },
            {
                "label": "",
                "value": "Humidity",
                "type": "str"
            },
            {
                "label": "",
                "value": "Blood Pressure",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "88e9ad7587f457a4"
            ]
        ]
    },
    {
        "id": "2711e96a3c37a659",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "e18d0d8d808b3ae9"
            ]
        ]
    },
    {
        "id": "c540d4a7ab1bac42",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "868fcff2e382f92a"
            ]
        ]
    },
    {
        "id": "88e9ad7587f457a4",
        "type": "change",
        "z": "d9d2f214529d33da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensor_type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "775d18bff4fca0ee"
            ]
        ]
    },
    {
        "id": "e18d0d8d808b3ae9",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "868fcff2e382f92a",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "775d18bff4fca0ee",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "59d114d1931adcf7",
        "type": "ui_button",
        "z": "d9d2f214529d33da",
        "name": "",
        "group": "2b4dbe26a6e761bf",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 750,
        "y": 920,
        "wires": [
            [
                "56bb8ab3c6be0846"
            ]
        ]
    },
    {
        "id": "84490f698ce56057",
        "type": "http request",
        "z": "d9d2f214529d33da",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1100,
        "y": 920,
        "wires": [
            [
                "a301f168ae4fba4b"
            ]
        ]
    },
    {
        "id": "56bb8ab3c6be0846",
        "type": "function",
        "z": "d9d2f214529d33da",
        "name": "function 41",
        "func": "\nvar passport = flow.get('passportNumber');  // Get selected sensor type from flow context\n\nvar url = `http://0.0.0.0:8080/patient?passport_code=${passport}`;\nmsg.url = url;  // Set the constructed URL in the msg object\n\nreturn msg;  // Return the message to the next node\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 920,
        "wires": [
            [
                "84490f698ce56057"
            ]
        ]
    },
    {
        "id": "a301f168ae4fba4b",
        "type": "debug",
        "z": "d9d2f214529d33da",
        "name": "debug 74",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 920,
        "wires": []
    },
    {
        "id": "6316979d28b3015d",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Email",
        "label": "email",
        "tooltip": "",
        "group": "a7513268b5069b0b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "db739ee24c301308"
            ]
        ]
    },
    {
        "id": "7710fea23e33341f",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Password",
        "label": "Password",
        "tooltip": "",
        "group": "a7513268b5069b0b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "9c4e5be62b96e8ae"
            ]
        ]
    },
    {
        "id": "db739ee24c301308",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 18",
        "func": "if(msg.payload !== \"\"){\n    flow.set(\"email\",msg.payload);\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4e5be62b96e8ae",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 19",
        "func": "if(msg.payload !== \"\"){\n    flow.set(\"password\",msg.payload);\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9a9caa04953368ed",
        "type": "ui_button",
        "z": "1602850f8ee96d62",
        "name": "",
        "group": "a7513268b5069b0b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log in",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "login",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 320,
        "wires": [
            [
                "f91156061b48ce41"
            ]
        ]
    },
    {
        "id": "f91156061b48ce41",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 20",
        "func": "\n// Retrieve username and password from flow context\nlet email = flow.get('email');\nlet password = flow.get('password');\n\n// Format them as a JSON object\nlet loginData = {\n    \"email\": email,\n    \"password\": password\n};\n\n// Set the payload to the formatted JSON\nmsg.payload = loginData;\n\n// Set headers (if needed, e.g., for content-type)\n//msg.headers = {\n//    \"Content-Type\": \"application/json\"\n//};\n\n// Return the message to pass it to the next node (e.g., HTTP request)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "5b57ca35719b95b7",
                "73acfae14ccb6de6"
            ]
        ]
    },
    {
        "id": "73acfae14ccb6de6",
        "type": "http request",
        "z": "1602850f8ee96d62",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "aa06cc31a1d1f870",
                "28164e59571082f9"
            ]
        ]
    },
    {
        "id": "64ed5dbf85e32ffc",
        "type": "json",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "aa06cc31a1d1f870",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "28164e59571082f9",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 420,
        "wires": [
            [
                "139c05062a15f548",
                "1c53403632d18767"
            ],
            [
                "604379b24787d50c"
            ]
        ]
    },
    {
        "id": "b46ff3b53b68ec72",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "Home",
        "events": "all",
        "x": 710,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "139c05062a15f548",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Home\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 400,
        "wires": [
            [
                "b46ff3b53b68ec72",
                "47a896f01891360c",
                "8b995562458d94c3"
            ]
        ]
    },
    {
        "id": "ea24bca859c26eca",
        "type": "ui_button",
        "z": "1602850f8ee96d62",
        "name": "Register",
        "group": "a7513268b5069b0b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 680,
        "wires": [
            [
                "76e9c181b911c678"
            ]
        ]
    },
    {
        "id": "76e9c181b911c678",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Register\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 680,
        "wires": [
            [
                "8f7ceb631146d260"
            ]
        ]
    },
    {
        "id": "8f7ceb631146d260",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "to Register",
        "events": "all",
        "x": 470,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4e26250fd8b95029",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Name",
        "label": "Name",
        "tooltip": "",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 80,
        "y": 1500,
        "wires": [
            [
                "5c5190cf67838051",
                "dd91862d76d56ecc"
            ]
        ]
    },
    {
        "id": "39b6c3a3c18d5739",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Username",
        "label": "Username",
        "tooltip": "",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 100,
        "y": 1560,
        "wires": [
            [
                "93eabe8ceb8e9630"
            ]
        ]
    },
    {
        "id": "6842756150f4560e",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Telegram User",
        "label": "Telegram User",
        "tooltip": "",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 110,
        "y": 1620,
        "wires": [
            [
                "02c60130d9830518"
            ]
        ]
    },
    {
        "id": "5d1214326c6e1199",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Password",
        "label": "Password",
        "tooltip": "",
        "group": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 90,
        "y": 1680,
        "wires": [
            [
                "2141ceefe49655ac"
            ]
        ]
    },
    {
        "id": "2a6e04e7b41bad8b",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "",
        "label": "Password confirmation",
        "tooltip": "",
        "group": "",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "9f3d7f305388f3e7"
            ]
        ]
    },
    {
        "id": "5c5190cf67838051",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "inputName",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1500,
        "wires": [
            [
                "b60d4e6e5711f26c"
            ]
        ]
    },
    {
        "id": "93eabe8ceb8e9630",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "inputUsername",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "02c60130d9830518",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "telegramUser",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "2141ceefe49655ac",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "inputPassword",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3d7f305388f3e7",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "confirmPassword",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "789e9fefa2fab342",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 1920,
        "wires": [
            [
                "03b00afa3098f92d"
            ],
            [
                "44f4ba1d54609482"
            ]
        ]
    },
    {
        "id": "fb3c4866ddcef910",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 21",
        "func": "if(msg.payload != \"\")\n    flow.set(\"nameInput\",msg.payload);\nelse\n    msg.payload=\"Empty\"    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "ba3a6b9df7cba958",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 1640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "03b00afa3098f92d",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Empty Values",
        "name": "Empty Value",
        "x": 660,
        "y": 1900,
        "wires": []
    },
    {
        "id": "f7766aa1b46aedc2",
        "type": "ui_button",
        "z": "1602850f8ee96d62",
        "name": "",
        "group": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Submit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "submit",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1920,
        "wires": [
            [
                "1891f7a394802944"
            ]
        ]
    },
    {
        "id": "1891f7a394802944",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 22",
        "func": "\n// Retrieve the flow variables\nlet inputName = flow.get('inputName') ;\nlet inputPassword = flow.get('inputPassword');\nlet confirmPassword = flow.get('confirmPassword');\nlet telegramUser = flow.get('telegramUser');\nlet inputUsername = flow.get('inputUsername');\nlet email = flow.get('email');\n\n// Check if any field is empty and return an error message\nif (inputName === \"\") {\n    msg.payload = {status: \"error\", message: \"Name cannot be empty\"};\n    return msg;\n}\nif (inputUsername === \"\") {\n    msg.payload = {status: \"error\", message: \"Username cannot be empty\"};\n    return msg;\n}\nif (inputPassword === \"\") {\n    msg.payload = {status: \"error\", message: \"Password cannot be empty\"};\n    return msg;\n}\nif (confirmPassword === \"\") {\n    msg.payload = {status: \"error\", message: \"Confirm Password cannot be empty\"};\n    return msg;\n}\nif (telegramUser === \"\") {\n    msg.payload = {status: \"error\", message: \"Telegram User cannot be empty\"};\n    return msg;\n}\nif (email === \"\") {\n    msg.payload = {status: \"error\", message: \"Email cannot be empty\"};\n    return msg;\n}\n\n// If all fields are filled, return a success message\nmsg.payload = {status: \"success\", message: \"All fields are filled in correctly\"};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1920,
        "wires": [
            [
                "789e9fefa2fab342",
                "01481129c078758c"
            ]
        ]
    },
    {
        "id": "44f4ba1d54609482",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 23",
        "func": "// Access the values from flow variables\nlet inputPassword = flow.get(\"inputPassword\");\nlet confirmPassword = flow.get(\"confirmPassword\");\n\n// Create the response object\nlet response = {};\n\nif (inputPassword === confirmPassword) {\n    response = {\n        \"status\": \"success\",\n        \"message\": \"Username matches the confirm password\"\n    };\n} else {\n    response = {\n        \"status\": \"error\",\n        \"message\": \"Username does not match the confirm password\"\n    };\n}\n\n// Set the message payload to the response object\nmsg.payload = response;\n\n// Return the message\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2020,
        "wires": [
            [
                "ba062538dea27bb2"
            ]
        ]
    },
    {
        "id": "da29f9e8e9b9e23d",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Passwords does not match",
        "name": "Password different",
        "x": 720,
        "y": 1940,
        "wires": []
    },
    {
        "id": "c62b43c58241a56c",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 2280,
        "wires": []
    },
    {
        "id": "01481129c078758c",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "c988a2243fdf979d",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 24",
        "func": "// Access the values from flow variables\nlet inputName = flow.get(\"inputName\");\nlet inputPassword = flow.get(\"inputPassword\");\nlet confirmPassword = flow.get(\"confirmPassword\");\nlet telegramUser = flow.get(\"telegramUser\");\nlet inputUsername = flow.get(\"inputUsername\");\nlet email = flow.get('email');\n\n// Create the JSON object with all variables\nlet jsonResponse = {\n    \"inputName\": inputName ,\n    \"inputPassword\": inputPassword,\n    \"confirmPassword\": confirmPassword ,\n    \"telegramUser\": telegramUser ,\n    \"inputUsername\": inputUsername,\n    \"email\": email\n};\n\n// Set the message payload to the JSON object\nmsg.payload = jsonResponse;\n\n// Return the message\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2140,
        "wires": [
            [
                "ed8d117180890e39"
            ]
        ]
    },
    {
        "id": "ba062538dea27bb2",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 2020,
        "wires": [
            [
                "da29f9e8e9b9e23d"
            ],
            [
                "c988a2243fdf979d"
            ]
        ]
    },
    {
        "id": "dd91862d76d56ecc",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b60d4e6e5711f26c",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1500,
        "wires": []
    },
    {
        "id": "002b1cd5caa506e1",
        "type": "http request",
        "z": "1602850f8ee96d62",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/register",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 720,
        "y": 2140,
        "wires": [
            [
                "c62b43c58241a56c"
            ]
        ]
    },
    {
        "id": "ed8d117180890e39",
        "type": "json",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 2140,
        "wires": [
            [
                "002b1cd5caa506e1",
                "4612cb7065b2d2d1"
            ]
        ]
    },
    {
        "id": "4612cb7065b2d2d1",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 2280,
        "wires": []
    },
    {
        "id": "1dca9b80e26456f8",
        "type": "ui_text_input",
        "z": "1602850f8ee96d62",
        "name": "Email",
        "label": "email",
        "tooltip": "",
        "group": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 80,
        "y": 1800,
        "wires": [
            [
                "0358497b031c6243"
            ]
        ]
    },
    {
        "id": "0358497b031c6243",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "email",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "a52b536f8731e71b",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 25",
        "func": "msg.payload = {\n    \"tabs\": {\n        \"hide\": [\"Lamp Control\", \"Home\", \"Historical Data\", \"Register\", \"Air Control\", \"Alarms\"]\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 40,
        "wires": [
            [
                "1b824e2b4371fad1"
            ]
        ]
    },
    {
        "id": "1b824e2b4371fad1",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fb79f8754eb2b4c9",
        "type": "inject",
        "z": "1602850f8ee96d62",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/1 0 * * *",
        "once": true,
        "onceDelay": "0.8",
        "topic": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "a52b536f8731e71b"
            ]
        ]
    },
    {
        "id": "47a896f01891360c",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Acess confimed",
        "name": "",
        "x": 650,
        "y": 560,
        "wires": []
    },
    {
        "id": "604379b24787d50c",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Invalid Username or Password",
        "name": "",
        "x": 370,
        "y": 540,
        "wires": []
    },
    {
        "id": "6e8c5fc8b0d62b8c",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "",
        "events": "all",
        "x": 880,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8b995562458d94c3",
        "type": "function",
        "z": "1602850f8ee96d62",
        "name": "function 27",
        "func": "msg.payload = {\n    \"tabs\": {\n        \"hide\": [\"Log in\"],  // Hide only the \"Log in\" tab\n        \"show\": [\"Lamp Control\", \"Home\", \"Historical Data\", \"Register\", \"Air Control\", \"Alarms\"]  // Unhide the other tabs\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            [
                "6e8c5fc8b0d62b8c"
            ]
        ]
    },
    {
        "id": "5b57ca35719b95b7",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 240,
        "wires": []
    },
    {
        "id": "1c53403632d18767",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "admin_id",
                "pt": "global",
                "to": "payload.user.admin_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "4b0deac5c9ee1c05"
            ]
        ]
    },
    {
        "id": "4b0deac5c9ee1c05",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 500,
        "wires": []
    },
    {
        "id": "a67a28389e6556cc",
        "type": "ui_form",
        "z": "1602850f8ee96d62",
        "name": "",
        "label": "",
        "group": "339285a0c8df0979",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email",
                "value": "email",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Repeat Password",
                "value": "password2",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "email": "",
            "password": "",
            "password2": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 900,
        "wires": [
            [
                "7d463dc285f32b98",
                "9eac083aaba04dae"
            ]
        ]
    },
    {
        "id": "7d463dc285f32b98",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 70",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "9eac083aaba04dae",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload.password",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "payload.password2",
                "vt": "msg"
            },
            {
                "t": "neq",
                "v": "payload.password2",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 900,
        "wires": [
            [
                "20e87c60fc400ea3"
            ],
            [
                "6b7444a003e56734"
            ]
        ]
    },
    {
        "id": "6b7444a003e56734",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": " Passwords does not match",
        "name": "",
        "x": 390,
        "y": 1020,
        "wires": []
    },
    {
        "id": "20e87c60fc400ea3",
        "type": "http request",
        "z": "1602850f8ee96d62",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/admin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 480,
        "y": 880,
        "wires": [
            [
                "d26d10794edfdb69",
                "faa039bcbcee5d2b"
            ]
        ]
    },
    {
        "id": "d26d10794edfdb69",
        "type": "switch",
        "z": "1602850f8ee96d62",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 880,
        "wires": [
            [
                "a2c04f66473452b3",
                "642adfa1ed8edad2",
                "e36e7afbb571404a"
            ],
            [
                "350aff571b6b2f89",
                "51b645615a308b9e"
            ]
        ]
    },
    {
        "id": "a2c04f66473452b3",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 740,
        "wires": []
    },
    {
        "id": "642adfa1ed8edad2",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Successfully created",
        "name": "",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "e36e7afbb571404a",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 880,
        "wires": [
            [
                "13d5ec0182531722"
            ]
        ]
    },
    {
        "id": "13d5ec0182531722",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "to login",
        "events": "all",
        "x": 1120,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "93960ac81b089d54",
        "type": "ui_toast",
        "z": "1602850f8ee96d62",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Email already Registered",
        "name": "",
        "x": 1170,
        "y": 960,
        "wires": []
    },
    {
        "id": "350aff571b6b2f89",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 72",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 980,
        "wires": []
    },
    {
        "id": "faa039bcbcee5d2b",
        "type": "debug",
        "z": "1602850f8ee96d62",
        "name": "debug 73",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 760,
        "wires": []
    },
    {
        "id": "51b645615a308b9e",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 960,
        "wires": [
            [
                "93960ac81b089d54"
            ]
        ]
    },
    {
        "id": "c96ea4261b993c5f",
        "type": "ui_button",
        "z": "1602850f8ee96d62",
        "name": "Return",
        "group": "339285a0c8df0979",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Return",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "9b5468df9bb0858b"
            ]
        ]
    },
    {
        "id": "9b5468df9bb0858b",
        "type": "change",
        "z": "1602850f8ee96d62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"log in\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "182fa1e2aafe0975"
            ]
        ]
    },
    {
        "id": "182fa1e2aafe0975",
        "type": "ui_ui_control",
        "z": "1602850f8ee96d62",
        "name": "to Login",
        "events": "all",
        "x": 560,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "47557d0b4866bbfc",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/registerPatient",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "1b0e80165fbf304b"
            ]
        ]
    },
    {
        "id": "1a1b36a4bcc59075",
        "type": "ui_form",
        "z": "e572cadeac508138",
        "name": "",
        "label": "",
        "group": "7fb095e26909aac0",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Address",
                "value": "address",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Emergency Contact",
                "value": "emergencyContact",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "address": "",
            "emergencyContact": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 70,
        "y": 100,
        "wires": [
            [
                "099bccd17c04d140"
            ]
        ]
    },
    {
        "id": "099bccd17c04d140",
        "type": "json",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "47557d0b4866bbfc"
            ]
        ]
    },
    {
        "id": "376c23f91e303d6b",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "676b87363167ccd9",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Do you want to add a Device ?",
        "name": "",
        "x": 670,
        "y": 360,
        "wires": [
            [
                "376c23f91e303d6b",
                "79a2842bb3f988ea"
            ]
        ]
    },
    {
        "id": "1b0e80165fbf304b",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "6b4244aa19c131d1"
            ],
            [
                "538c29892c59b57a",
                "5223ae277b846600"
            ]
        ]
    },
    {
        "id": "9c90959f6fefa6ca",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "bottom right",
        "displayTime": "6",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "538c29892c59b57a",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 140,
        "wires": []
    },
    {
        "id": "abbb69bc0c85ecfe",
        "type": "inject",
        "z": "e572cadeac508138",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "object",
        "payloadType": "date",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "47557d0b4866bbfc"
            ]
        ]
    },
    {
        "id": "6b4244aa19c131d1",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "9c90959f6fefa6ca"
            ]
        ]
    },
    {
        "id": "5223ae277b846600",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It will be requested  to provide technical informations about  Sensor/actuator",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "676b87363167ccd9"
            ]
        ]
    },
    {
        "id": "541d2f3f01b56cee",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Add Device",
        "events": "all",
        "x": 1230,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "bb99560cc09ae71e",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Add Device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 260,
        "wires": [
            [
                "541d2f3f01b56cee"
            ]
        ]
    },
    {
        "id": "7e971c9c12d78ccd",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 140,
        "wires": []
    },
    {
        "id": "79a2842bb3f988ea",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 300,
        "wires": [
            [
                "7e971c9c12d78ccd",
                "bb99560cc09ae71e"
            ]
        ]
    },
    {
        "id": "a35b9a01726d4f3a",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "query",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "5f1cd9b984f18c45",
                "fc9f607b6aa7d0cb"
            ]
        ]
    },
    {
        "id": "5931fb775725d6d1",
        "type": "ui_form",
        "z": "e572cadeac508138",
        "name": "",
        "label": "",
        "group": "fe8dc837cefb9493",
        "order": 6,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Mac Address",
                "value": "mac_address",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device Name",
                "value": "device_name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Device Type",
                "value": "device_type",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "location",
                "value": "location",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "thingspeak_channel_id",
                "value": "thingspeak_channel_id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "thingspeak_channel_key",
                "value": "thingspeak_channel_key",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Active",
                "value": "is_active",
                "type": "switch",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "mac_address": "",
            "device_name": "",
            "device_type": "",
            "location": "",
            "thingspeak_channel_id": "",
            "thingspeak_channel_key": "",
            "is_active": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 70,
        "y": 540,
        "wires": [
            [
                "2f2d83d49112f97c"
            ]
        ]
    },
    {
        "id": "901acb4893c2e539",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 920,
        "wires": []
    },
    {
        "id": "76c93aaadb9a71bd",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Do you want to  confirm?",
        "name": "",
        "x": 710,
        "y": 920,
        "wires": [
            [
                "901acb4893c2e539",
                "83a073b9e3715366"
            ]
        ]
    },
    {
        "id": "5f1cd9b984f18c45",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 660,
        "wires": [
            [
                "74ce612d41fcde5d"
            ],
            [
                "5a9cf097e6117aa3",
                "66687051555f2659"
            ]
        ]
    },
    {
        "id": "7b3fdad782a54bcd",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "bottom right",
        "displayTime": "6",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1110,
        "y": 560,
        "wires": []
    },
    {
        "id": "5a9cf097e6117aa3",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 740,
        "wires": []
    },
    {
        "id": "2adc1fe468f21846",
        "type": "inject",
        "z": "e572cadeac508138",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "object",
        "payloadType": "date",
        "x": 220,
        "y": 800,
        "wires": [
            [
                "a35b9a01726d4f3a"
            ]
        ]
    },
    {
        "id": "74ce612d41fcde5d",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 560,
        "wires": [
            [
                "7b3fdad782a54bcd"
            ]
        ]
    },
    {
        "id": "66687051555f2659",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 920,
        "wires": [
            [
                "76c93aaadb9a71bd"
            ]
        ]
    },
    {
        "id": "e68ac24168c9831d",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Device",
        "events": "all",
        "x": 1410,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "260afabe982ded2b",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 840,
        "wires": [
            [
                "e68ac24168c9831d",
                "d871772fad4bcc5e"
            ]
        ]
    },
    {
        "id": "af4ab9e88f70d8a6",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 700,
        "wires": []
    },
    {
        "id": "83a073b9e3715366",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 860,
        "wires": [
            [
                "af4ab9e88f70d8a6",
                "260afabe982ded2b"
            ]
        ]
    },
    {
        "id": "445037fb3bbc8a9b",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "e4cc8096b04ecbd3",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Update ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "update",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1640,
        "wires": [
            [
                "8735de26e3f36bcc"
            ]
        ]
    },
    {
        "id": "19eabb5340142dad",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Do you want to  edit this device?",
        "name": "",
        "x": 590,
        "y": 1880,
        "wires": [
            [
                "202cf4e12fac7e6b"
            ]
        ]
    },
    {
        "id": "3ccd2fd4b1c2a0d1",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "deviceSelected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "device_id",
                "pt": "flow",
                "to": "payload.device_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1420,
        "wires": [
            [
                "1150dc1b4c63a5c3"
            ]
        ]
    },
    {
        "id": "202cf4e12fac7e6b",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1780,
        "wires": [
            [
                "3947a9529997a2ca"
            ],
            [
                "5d2fbabb05542f20"
            ]
        ]
    },
    {
        "id": "3947a9529997a2ca",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "deviceSelected",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1760,
        "wires": [
            [
                "de48493074ec6ed1",
                "94ebb1c164d6244d",
                "5d2fbabb05542f20"
            ]
        ]
    },
    {
        "id": "94ebb1c164d6244d",
        "type": "link out",
        "z": "e572cadeac508138",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "191e410938c0a14b",
            "8684a73caa8176d0"
        ],
        "x": 1045,
        "y": 1760,
        "wires": []
    },
    {
        "id": "191e410938c0a14b",
        "type": "link in",
        "z": "e572cadeac508138",
        "name": "link in 4",
        "links": [
            "94ebb1c164d6244d"
        ],
        "x": 25,
        "y": 660,
        "wires": [
            [
                "5931fb775725d6d1"
            ]
        ]
    },
    {
        "id": "de48493074ec6ed1",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Add Device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1800,
        "wires": [
            [
                "f7b78f6e2106ade4"
            ]
        ]
    },
    {
        "id": "f7b78f6e2106ade4",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Add Device",
        "events": "all",
        "x": 1210,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "9d46c58acca09271",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "e4cc8096b04ecbd3",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Add New device",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "2ccbc3c9ad11f61f"
            ]
        ]
    },
    {
        "id": "2ccbc3c9ad11f61f",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Add Device\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "deviceSelected",
                "pt": "flow",
                "to": "{\"device_id\":\"\",\"mac_address\":\"\",\"device_name\":\"\",\"device_type\":\"\",\"location\":\"\",\"is_active\":\"\",\"patient_id\":\"\",\"admin_id\":\"\",\"thingspeak_channel_id\":\"\",\"thingspeak_channel_key\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1680,
        "wires": [
            [
                "ead7d20a60bee989"
            ]
        ]
    },
    {
        "id": "ead7d20a60bee989",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Add Device",
        "events": "all",
        "x": 630,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "d6edec96ed713edf",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "e4cc8096b04ecbd3",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Edit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1780,
        "wires": [
            [
                "52b430595c6c5645"
            ]
        ]
    },
    {
        "id": "826221b7b549018d",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/Entity",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 400,
        "y": 2680,
        "wires": [
            [
                "41ec5f9c2099cd9d"
            ]
        ]
    },
    {
        "id": "4b7b0a92988acd6b",
        "type": "ui_form",
        "z": "e572cadeac508138",
        "name": "",
        "label": "",
        "group": "5957570cb6c084d1",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Entity Type",
                "value": "entity_type",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Entity Name",
                "value": "entity_name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Active",
                "value": "is_active",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "entity_type": "",
            "entity_name": "",
            "is_active": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 130,
        "y": 2620,
        "wires": [
            [
                "cb5554430a842d83"
            ]
        ]
    },
    {
        "id": "cb5554430a842d83",
        "type": "json",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "826221b7b549018d"
            ]
        ]
    },
    {
        "id": "861840da6a0edfd5",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 2880,
        "wires": []
    },
    {
        "id": "6ecf1d4d196ecaf3",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Do you want to  confirm?",
        "name": "",
        "x": 730,
        "y": 2840,
        "wires": [
            [
                "861840da6a0edfd5",
                "6666977c213c608b"
            ]
        ]
    },
    {
        "id": "41ec5f9c2099cd9d",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 2600,
        "wires": [
            [
                "61daed464bd0cf7e"
            ],
            [
                "2c66a3735355a0bd"
            ]
        ]
    },
    {
        "id": "5661b5ed66e4a010",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "bottom right",
        "displayTime": "6",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1110,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e606974d0c04cdc3",
        "type": "inject",
        "z": "e572cadeac508138",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "object",
        "payloadType": "date",
        "x": 240,
        "y": 2820,
        "wires": [
            [
                "826221b7b549018d"
            ]
        ]
    },
    {
        "id": "61daed464bd0cf7e",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2580,
        "wires": [
            [
                "5661b5ed66e4a010"
            ]
        ]
    },
    {
        "id": "2c66a3735355a0bd",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2840,
        "wires": [
            [
                "6ecf1d4d196ecaf3"
            ]
        ]
    },
    {
        "id": "b301cc69c26386a6",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Device",
        "events": "all",
        "x": 1210,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "b53a64132dac3259",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Entity\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 2740,
        "wires": [
            [
                "b301cc69c26386a6"
            ]
        ]
    },
    {
        "id": "568c44bfa4d60ac9",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 2680,
        "wires": []
    },
    {
        "id": "6666977c213c608b",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 2740,
        "wires": [
            [
                "568c44bfa4d60ac9",
                "b53a64132dac3259"
            ]
        ]
    },
    {
        "id": "7f6223409db9c11d",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "8a85c8840ee75ccb",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Update ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "update",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 3020,
        "wires": [
            [
                "4f00e4f932effbb0"
            ]
        ]
    },
    {
        "id": "4f00e4f932effbb0",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://0.0.0.0:8080/Entity",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 280,
        "y": 3020,
        "wires": [
            [
                "09ea8f61f777961c",
                "d6b9cb2e8e32cea5"
            ]
        ]
    },
    {
        "id": "eb7a98c7bdd9e3dd",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Do you want to  edit this  Entity?",
        "name": "",
        "x": 490,
        "y": 3180,
        "wires": [
            [
                "aecb3815199a639a"
            ]
        ]
    },
    {
        "id": "b5b45d1633e6e34e",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "entitySelected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 3020,
        "wires": [
            [
                "f0c726170d4bef44"
            ]
        ]
    },
    {
        "id": "aecb3815199a639a",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 3140,
        "wires": [
            [
                "a0a03af184b36da6"
            ]
        ]
    },
    {
        "id": "a0a03af184b36da6",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "entitySelected",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 3140,
        "wires": [
            [
                "7d5f28775d21339a",
                "b65aefa34a9654c4",
                "a1c5b9cf3e731ded"
            ]
        ]
    },
    {
        "id": "7d5f28775d21339a",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Add Entity\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 3260,
        "wires": [
            [
                "dbc6726d6e6fa0ea"
            ]
        ]
    },
    {
        "id": "dbc6726d6e6fa0ea",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Add Entity",
        "events": "all",
        "x": 1270,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "06eddf6f11479b1a",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "8a85c8840ee75ccb",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Add New  Entity",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 2940,
        "wires": [
            [
                "598ad577929a4e46"
            ]
        ]
    },
    {
        "id": "598ad577929a4e46",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Add Entity\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "009e8257994e663b"
            ]
        ]
    },
    {
        "id": "009e8257994e663b",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Add New Entity",
        "events": "all",
        "x": 600,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "e51dc5ba6bb11bda",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "8a85c8840ee75ccb",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Edit",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 3180,
        "wires": [
            [
                "063a1ebb018e97f0"
            ]
        ]
    },
    {
        "id": "54ab57361bdbaeed",
        "type": "link in",
        "z": "e572cadeac508138",
        "name": "link in 5",
        "links": [
            "b65aefa34a9654c4"
        ],
        "x": 45,
        "y": 2860,
        "wires": [
            [
                "4b7b0a92988acd6b"
            ]
        ]
    },
    {
        "id": "b65aefa34a9654c4",
        "type": "link out",
        "z": "e572cadeac508138",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "54ab57361bdbaeed"
        ],
        "x": 1145,
        "y": 3160,
        "wires": []
    },
    {
        "id": "063a1ebb018e97f0",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 3180,
        "wires": [
            [
                "eb7a98c7bdd9e3dd"
            ]
        ]
    },
    {
        "id": "52b430595c6c5645",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "flow",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1780,
        "wires": [
            [
                "fb275baa5df0baa8"
            ]
        ]
    },
    {
        "id": "09ea8f61f777961c",
        "type": "ui_table",
        "z": "e572cadeac508138",
        "group": "8a85c8840ee75ccb",
        "name": "",
        "order": 1,
        "width": 9,
        "height": "4",
        "columns": [
            {
                "field": "entity_type",
                "title": "Entity Type",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "entity_name",
                "title": "Entity Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "is_active",
                "title": "Active",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 490,
        "y": 3020,
        "wires": [
            [
                "b5b45d1633e6e34e"
            ]
        ]
    },
    {
        "id": "f0c726170d4bef44",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 3020,
        "wires": []
    },
    {
        "id": "a1c5b9cf3e731ded",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 3060,
        "wires": []
    },
    {
        "id": "c0baef0feae6a7a1",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "e4cc8096b04ecbd3",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "search",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1540,
        "wires": [
            [
                "8735de26e3f36bcc"
            ]
        ]
    },
    {
        "id": "04d80dd34e449bee",
        "type": "ui_text_input",
        "z": "e572cadeac508138",
        "name": "",
        "label": "Digit the Passport",
        "tooltip": "",
        "group": "e4cc8096b04ecbd3",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 1480,
        "wires": [
            [
                "97d6ed1d96ed48ce"
            ]
        ]
    },
    {
        "id": "acf8df3687ab4230",
        "type": "ui_text",
        "z": "e572cadeac508138",
        "group": "e4cc8096b04ecbd3",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Number of Passport:",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "23",
        "color": "#0e7f81",
        "x": 160,
        "y": 1360,
        "wires": []
    },
    {
        "id": "97d6ed1d96ed48ce",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "passportNumber",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "ffa01a63f8bc5a9d",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9a79fe72f14b074d",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 1560,
        "wires": [
            [
                "73af814b5a712bde",
                "1eb236ea4c116cf4"
            ]
        ]
    },
    {
        "id": "8735de26e3f36bcc",
        "type": "function",
        "z": "e572cadeac508138",
        "name": "function 28",
        "func": "\nvar passport = flow.get('passportNumber');  // Get selected sensor type from flow context\n\nvar url = `http://0.0.0.0:8080/patient?passport_code=${passport}`;\nmsg.url = url;  // Set the constructed URL in the msg object\n\nreturn msg;  // Return the message to the next node\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1560,
        "wires": [
            [
                "9a79fe72f14b074d"
            ]
        ]
    },
    {
        "id": "f1bc868ad2628239",
        "type": "ui_table",
        "z": "e572cadeac508138",
        "group": "e4cc8096b04ecbd3",
        "name": "",
        "order": 5,
        "width": 12,
        "height": 3,
        "columns": [
            {
                "field": "mac_address",
                "title": "Mac Address",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "device_name",
                "title": "Device Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "device_type",
                "title": "Device type",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "location",
                "title": "Location",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "is_active",
                "title": "Active",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1070,
        "y": 1580,
        "wires": [
            [
                "3ccd2fd4b1c2a0d1"
            ]
        ]
    },
    {
        "id": "d6b9cb2e8e32cea5",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 3080,
        "wires": []
    },
    {
        "id": "0f5c951504e8b0c1",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "e4cc8096b04ecbd3",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 50,
        "y": 2080,
        "wires": [
            [
                "55963785ed2b5ed6"
            ]
        ]
    },
    {
        "id": "5d2fbabb05542f20",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "deviceSelected",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "fb275baa5df0baa8",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "deviceSelected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 1920,
        "wires": [
            [
                "19eabb5340142dad"
            ],
            [
                "239c424412e6e8d1"
            ]
        ]
    },
    {
        "id": "239c424412e6e8d1",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "You should Select a line",
        "name": "",
        "x": 670,
        "y": 1980,
        "wires": []
    },
    {
        "id": "4215c351d999173a",
        "type": "function",
        "z": "e572cadeac508138",
        "name": "function 29",
        "func": "var device_id = flow.get('device_id');  // Get selected device from flow context\n\nvar url = `http://localhost:8080/device?device_id=${device_id}`;\nmsg.url = url;  // Set the constructed URL in the msg object\nnode.warn(device_id);\nreturn msg;  // Return the message to the next node\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2220,
        "wires": [
            [
                "a69618fad4f06cf3",
                "984258aa9b664db3"
            ]
        ]
    },
    {
        "id": "a69618fad4f06cf3",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "DELETE",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 740,
        "y": 2100,
        "wires": [
            [
                "718d4519e82e7f55"
            ]
        ]
    },
    {
        "id": "984258aa9b664db3",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "deviceSelected",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 2260,
        "wires": [
            [
                "0d61463d35e6e6da"
            ]
        ]
    },
    {
        "id": "015c602a2c7c84cc",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2000,
        "wires": []
    },
    {
        "id": "718d4519e82e7f55",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 2100,
        "wires": [
            [
                "08d7e59d6d8ccf34",
                "015c602a2c7c84cc"
            ]
        ]
    },
    {
        "id": "049ffc731e9970c6",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Deleted sucessfully",
        "name": "",
        "x": 1350,
        "y": 2100,
        "wires": []
    },
    {
        "id": "08d7e59d6d8ccf34",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 2100,
        "wires": [
            [
                "049ffc731e9970c6",
                "ac9ed00e51fc4753"
            ]
        ]
    },
    {
        "id": "55963785ed2b5ed6",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "deviceSelected",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 2240,
        "wires": [
            [
                "872f5cc7dd081ea4"
            ],
            [
                "4466168ecaa060fe"
            ]
        ]
    },
    {
        "id": "574aac6310d9296f",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "You should Select a line fisrt",
        "name": "",
        "x": 510,
        "y": 2360,
        "wires": []
    },
    {
        "id": "0d61463d35e6e6da",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "deviceSelected",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "4466168ecaa060fe",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 2360,
        "wires": [
            [
                "574aac6310d9296f"
            ]
        ]
    },
    {
        "id": "1a2fbab0798ee445",
        "type": "http request",
        "z": "e572cadeac508138",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 840,
        "y": 1580,
        "wires": [
            [
                "f1bc868ad2628239",
                "ffa01a63f8bc5a9d"
            ]
        ]
    },
    {
        "id": "73af814b5a712bde",
        "type": "function",
        "z": "e572cadeac508138",
        "name": "function 30",
        "func": "var patient = msg.payload?.[0]?.patient_id;  // extract patient_id\n\nif (patient !== undefined) {\n    flow.set(\"patient_id\", patient);  // Store in flow variable\n    msg.url = `http://0.0.0.0:8080/device?patient_id=${patient}`;\n    msg.patient_id = patient;  // Add patient_id to msg for immediate use\n} else {\n    node.warn(\"patient_id not found in payload\");\n    msg.url = null;\n    msg.patient_id = null;  // Ensure msg.patient_id is always set\n}\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1580,
        "wires": [
            [
                "1a2fbab0798ee445",
                "97a1b79b53f906da"
            ]
        ]
    },
    {
        "id": "3e9b277f474131b2",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 480,
        "wires": []
    },
    {
        "id": "2f2d83d49112f97c",
        "type": "function",
        "z": "e572cadeac508138",
        "name": "function 31",
        "func": "if (msg.payload && msg.payload.hasOwnProperty(\"is_active\")) {\n    msg.payload[\"is_active\"] = msg.payload[\"is_active\"] ? 1 : 0;\n}\n\nmsg.payload.patient_id = flow.get('patient_id');//create patient_id\nmsg.payload.admin_id = global.get('admin_id');// create admin_id\nvar device_id = flow.get('device_id');\nmsg.method = flow.get('method') || \"POST\";\nnode.warn(device_id);\n\n\nif (msg.method === \"PUT\") {\n    msg.url = `http://0.0.0.0:8080/device?device_id=${device_id}`;\n} else {\n    msg.url = \"http://0.0.0.0:8080/device\";\n}\n\nnode.warn(`Method: ${msg.method}, URL: ${msg.url}`);\n\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 560,
        "wires": [
            [
                "a35b9a01726d4f3a",
                "3e9b277f474131b2"
            ]
        ]
    },
    {
        "id": "fc9f607b6aa7d0cb",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 520,
        "wires": []
    },
    {
        "id": "97a1b79b53f906da",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "patient_id",
                "pt": "flow",
                "to": "patient_id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "1150dc1b4c63a5c3",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.device_id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d871772fad4bcc5e",
        "type": "link out",
        "z": "e572cadeac508138",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "eb38f8e6f76190ec"
        ],
        "x": 1415,
        "y": 840,
        "wires": []
    },
    {
        "id": "eb38f8e6f76190ec",
        "type": "link in",
        "z": "e572cadeac508138",
        "name": "link out Table",
        "links": [
            "d871772fad4bcc5e",
            "ac9ed00e51fc4753"
        ],
        "x": 345,
        "y": 1640,
        "wires": [
            [
                "8735de26e3f36bcc"
            ]
        ]
    },
    {
        "id": "872f5cc7dd081ea4",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\" \"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "76f87bd9a96a9525"
            ]
        ]
    },
    {
        "id": "76f87bd9a96a9525",
        "type": "ui_toast",
        "z": "e572cadeac508138",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Are you sure you want delete it?",
        "name": "",
        "x": 410,
        "y": 2080,
        "wires": [
            [
                "406bfd156499f987"
            ]
        ]
    },
    {
        "id": "406bfd156499f987",
        "type": "switch",
        "z": "e572cadeac508138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 2160,
        "wires": [
            [
                "4215c351d999173a"
            ]
        ]
    },
    {
        "id": "ac9ed00e51fc4753",
        "type": "link out",
        "z": "e572cadeac508138",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "eb38f8e6f76190ec"
        ],
        "x": 1325,
        "y": 2160,
        "wires": []
    },
    {
        "id": "a8eefc0e3655a9fe",
        "type": "ui_button",
        "z": "e572cadeac508138",
        "name": "",
        "group": "fe8dc837cefb9493",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Back",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 1060,
        "wires": [
            [
                "deeea68b0d3cde33"
            ]
        ]
    },
    {
        "id": "deeea68b0d3cde33",
        "type": "change",
        "z": "e572cadeac508138",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Device\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "13cbcce69a591741"
            ]
        ]
    },
    {
        "id": "13cbcce69a591741",
        "type": "ui_ui_control",
        "z": "e572cadeac508138",
        "name": "Device",
        "events": "all",
        "x": 510,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "1eb236ea4c116cf4",
        "type": "debug",
        "z": "e572cadeac508138",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1500,
        "wires": []
    }
]